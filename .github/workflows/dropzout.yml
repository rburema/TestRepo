---
name: other-repo-test

on:

  workflow_dispatch:
    inputs:
      engine_package_id:
        description: 'Conan-id for the engine-version under test.'
        default: 'curaengine/latest@ultimaker/stable'
        required: true
        type: string

  push:
    paths:
      - '**.txt'
      - '**.yml'
      - '.github/workflows/dropzout.yml'
    branches:
      - brain
    tags:
      - '![1-9].[0-9]+*'

  pull_request:
    paths:
      - '**.txt'
      - '**.yml'
      - '.github/workflows/dropzout.yml'
    branches:
      - brain
    tags:
      - '![1-9].[0-9]+*'

env:
    CONAN_LOGIN_USERNAME_CURA: ${{ secrets.CONAN_USER }}
    CONAN_PASSWORD_CURA: ${{ secrets.CONAN_PASS }}
    CONAN_LOGIN_USERNAME_CURA_CE: ${{ secrets.CONAN_USER }}
    CONAN_PASSWORD_CURA_CE: ${{ secrets.CONAN_PASS }}
    CONAN_LOG_RUN_TO_OUTPUT: 1
    CONAN_LOGGING_LEVEL: info
    CONAN_NON_INTERACTIVE: 1

jobs:

    build-engine:
        runs-on: ubuntu-20.04

        steps:
            -   name: Checkout CuraEngine
                uses: actions/checkout@v3
                with:
                    repository: 'Ultimaker/CuraEngine'
                    ref: 'main'

            -   name: Setup Python and pip
                uses: actions/setup-python@v4
                with:
                    python-version: '3.10.x'
                    architecture: 'x64'
                    cache: 'pip'
                    cache-dependency-path: .github/workflows/requirements-conan-package.txt

            -   name: Install Python requirements and Create default Conan profile
                run: |
                    pip install -r https://raw.githubusercontent.com/Ultimaker/Cura/main/.github/workflows/requirements-conan-package.txt
                #  Note the runner requirements are always installed from the main branch in the Ultimaker/Cura repo

            -   name: Use Conan download cache (Bash)
                run: conan config set storage.download_cache="$HOME/.conan/conan_download_cache"

            -   name: Cache Conan local repository packages (Bash)
                uses: actions/cache@v3
                with:
                    path: |
                        $HOME/.conan/data
                        $HOME/.conan/conan_download_cache
                    key: conan-${{ runner.os }}-${{ runner.arch }}

            # NOTE: Due to what are probably github issues, we have to remove the cache and reconfigure before the rest.
            #       This is maybe because grub caches the disk it uses last time, which is recreated each time.
            -   name: Install Linux system requirements
                run: |
                    sudo rm /var/cache/debconf/config.dat
                    sudo dpkg --configure -a
                    sudo apt update
                    sudo apt upgrade
                    sudo apt install build-essential checkinstall libegl-dev zlib1g-dev libssl-dev ninja-build autoconf libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxdmcp-dev libxext-dev libxfixes-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev xtrans-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev xkb-data libxcb-dri3-dev uuid-dev libxcb-util-dev libxkbcommon-x11-dev pkg-config -y

            -   name: Use GCC-10 on ubuntu as default
                run: |
                    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10
                    sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10

            -   name: Get Conan configuration
                run: |
                    conan profile new default --detect
                    conan config install https://github.com/Ultimaker/conan-config.git

            -   name: Install dependencies
                run: conan install . {{ $inputs.engine_package_id }} -o -s build_type=Release --build=missing --update -g GitHubActionsRunEnv -g GitHubActionsBuildEnv

            -   name: Set Environment variables from Conan install (bash)
                run: |
                    . ./activate_github_actions_runenv.sh
                    . ./activate_github_actions_buildenv.sh
                working-directory: build/generators

            -   name: Build CuraEngine
                run: |
                    cmake --preset release
                    cmake --build --preset release

            -   name: Run CuraEngine On The Jobs
                run: |
                    ./build/Release/CuraEngine connect 127.0.0.1
